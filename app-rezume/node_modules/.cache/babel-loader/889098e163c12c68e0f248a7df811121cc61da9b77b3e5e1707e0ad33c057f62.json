{"ast":null,"code":"var _jsxFileName = \"/Users/kiril/Desktop/js/Django-react-rezume/frontend/app-rezume/src/components/CardSection/CardSection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchProjects } from '../../services/api';\nimport './style.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardSection() {\n  _s();\n  const [projects, setProjects] = useState([]); // Хук для хранения проектов\n\n  useEffect(() => {\n    // Получаем данные с API при монтировании компонента\n    fetchProjects().then(data => setProjects(data)).catch(error => console.error(\"Ошибка при получении данных:\", error));\n  }, []); // Пустой массив зависимостей, чтобы запрос выполнялся только один раз\n\n  // Функция для обрезки текста до 10 слов\n  const truncateText = (text, wordLimit) => {\n    const words = text.split(\" \"); // Разбиваем текст на массив слов\n    if (words.length <= wordLimit) return text; // Если слов меньше или равно лимиту, возвращаем текст\n    return words.slice(0, wordLimit).join(\" \") + \"...\"; // Берем первые wordLimit слов и добавляем \"...\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"card-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-conteiner\",\n      children: projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this) : projects.map(project => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/projects/${project.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"glass-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-logo\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              strokeWidth: \"1.5\",\n              stroke: \"currentColor\",\n              className: \"size-6\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                d: \"M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-description\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-items\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: truncateText(project.description, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-link\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: project.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: project.link\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(CardSection, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = CardSection;\nexport default CardSection;\nvar _c;\n$RefreshReg$(_c, \"CardSection\");","map":{"version":3,"names":["React","useEffect","useState","fetchProjects","Link","jsxDEV","_jsxDEV","CardSection","_s","projects","setProjects","then","data","catch","error","console","truncateText","text","wordLimit","words","split","length","slice","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","to","id","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","name","description","href","link","target","rel","_c","$RefreshReg$"],"sources":["/Users/kiril/Desktop/js/Django-react-rezume/frontend/app-rezume/src/components/CardSection/CardSection.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {fetchProjects} from '../../services/api';\nimport './style.css';\nimport { Link } from 'react-router-dom';\n\n\n\n\n \n\nfunction CardSection() {\n    const [projects, setProjects] = useState([]); // Хук для хранения проектов\n    \n    useEffect(() => {\n        // Получаем данные с API при монтировании компонента\n        fetchProjects()\n            .then((data) => setProjects(data))\n            .catch((error) => console.error(\"Ошибка при получении данных:\", error));\n    }, []); // Пустой массив зависимостей, чтобы запрос выполнялся только один раз\n\n\n      // Функция для обрезки текста до 10 слов\n    const truncateText = (text, wordLimit) => {\n        const words = text.split(\" \"); // Разбиваем текст на массив слов\n        if (words.length <= wordLimit) return text; // Если слов меньше или равно лимиту, возвращаем текст\n        return words.slice(0, wordLimit).join(\" \") + \"...\"; // Берем первые wordLimit слов и добавляем \"...\"\n    };\n\n    return (\n        <section className=\"card-section\">\n            <div className=\"card-conteiner\">\n                {projects.length === 0 ? (\n                    <p>Загрузка...</p>\n                ) : (\n                    projects.map((project) => (\n                        <Link to={`/projects/${project.id}`} key={project.id}>\n                            <div className=\"glass-card\" key={project.id}>\n                                <div className=\"card-logo\">\n                                    {/* Вы можете заменить это на свой логотип */}\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"size-6\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3\" />\n                                    </svg>\n                                </div>\n                                <div className=\"card-description\">\n                                    <h5>{project.name}</h5>\n                                </div>\n                                <div className=\"card-items\">\n                                    <p>{truncateText(project.description, 10)}</p>\n                                </div>\n                                <div className=\"card-link\">\n                                    <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">{project.link}</a>\n                                </div>\n                            </div>\n                        </Link>    \n                    ))\n                )}\n            </div>\n        </section>\n    );\n}\nexport default CardSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}