{"ast":null,"code":"var _jsxFileName = \"/Users/kiril/Desktop/js/Django-react-rezume/frontend/app-rezume/src/components/CardSection/CardSection.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import {fetchProjects} from '../../services/api';\n// import './style.css';\n// import { Link } from 'react-router-dom';\n\n// useEffect(() => {\n//   fetch(`${BASE_URL}/api/projects/`)\n//     .then(response => {\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n//       return response.json();\n//     })\n//     .then(data => {\n//       setProjects(data);  \n//       setLoading(false);   \n//     })\n//     .catch(error => {\n//       console.error('Error:', error);\n//       setError(error);    \n//       setLoading(false);   \n//     });\n// }, []); \n\n// import React, { useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import './style.css';\n\n// const Projects = () => {\n//   const [projects, setProjects] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n// useEffect(()=>{\n//   fetchProjects()\n//     .then(data=>{\n//       setProjects(data);\n//       setLoading(false);\n//     })\n//     .catch(error=>{\n\n//       setError(error);\n//       setLoading(false);\n//     });\n\n// },[]);\n\n//   const truncateText = (text, length) => {\n//     if (text.length > length) {\n//       return text.slice(0, length) + '...';\n//     }\n//     return text;\n//   };\n\n//   if (loading) {\n//     return <div>Загрузка...</div>;  // Пока загружаются данные\n//   }\n\n//   if (error) {\n//     return <div>Ошибка: {error.message}</div>;  // Если произошла ошибка\n//   }\n\n//   return (\n//     <section className=\"card-section\">\n//       <div className=\"card-conteiner\">\n//         {projects.length === 0 ? (\n//           <p>Нет проектов для отображения</p>\n//         ) : (\n//           projects.map((project) => (\n//             <Link to={`/projects/${project.id}`} key={project.id} className=\"no-link-style\">\n//               <div className=\"glass-card\">\n//                 <div className=\"card-logo\">\n//                   {/* Вы можете заменить это на свой логотип */}\n//                   <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"size-6\">\n//                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3\" />\n//                   </svg>\n//                 </div>\n//                 <div className=\"card-description\">\n//                   <h5>{project.name}</h5>\n//                 </div>\n//                 <div className=\"card-items\">\n//                   <p>{truncateText(project.description, 100)}</p>\n//                 </div>\n//                 <div className=\"card-link\">\n//                   {project.link && (\n//                     <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\n//                       Перейти на проект\n//                     </a>\n//                   )}\n//                 </div>\n//               </div>\n//             </Link>\n//           ))\n//         )}\n//       </div>\n//     </section>\n//   );\n// };\n\n// export default Projects;\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Testa = () => {\n  _s();\n  const [data, setData] = useState([]); // Состояние для хранения данных\n  const [loading, setLoading] = useState(true); // Состояние загрузки\n  const [error, setError] = useState(null); // Состояние для обработки ошибок\n\n  useEffect(() => {\n    // Функция для выполнения запроса к API\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/projects/');\n        if (!response.ok) {\n          throw new Error('Ошибка при получении данных!');\n        }\n        const result = await response.json();\n        setData(result); // Сохраняем данные в состояние\n        setLoading(false); // Завершаем загрузку\n      } catch (error) {\n        setError(error); // Обрабатываем ошибку\n        setLoading(false); // Завершаем загрузку\n      }\n    };\n    fetchData(); // Вызываем функцию\n  }, []); // Пустой массив зависимостей, чтобы запрос выполнялся только один раз\n\n  // Отображаем данные или ошибку\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this) : data.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this), project.link && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.link,\n          children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 32\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(Testa, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = Testa;\nexport default Testa;\nvar _c;\n$RefreshReg$(_c, \"Testa\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Testa","_s","data","setData","loading","setLoading","error","setError","fetchData","response","fetch","ok","Error","result","json","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","map","project","name","description","link","href","id","_c","$RefreshReg$"],"sources":["/Users/kiril/Desktop/js/Django-react-rezume/frontend/app-rezume/src/components/CardSection/CardSection.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import {fetchProjects} from '../../services/api';\n// import './style.css';\n// import { Link } from 'react-router-dom';\n\n\n  // useEffect(() => {\n  //   fetch(`${BASE_URL}/api/projects/`)\n  //     .then(response => {\n  //       if (!response.ok) {\n  //         throw new Error('Network response was not ok');\n  //       }\n  //       return response.json();\n  //     })\n  //     .then(data => {\n  //       setProjects(data);  \n  //       setLoading(false);   \n  //     })\n  //     .catch(error => {\n  //       console.error('Error:', error);\n  //       setError(error);    \n  //       setLoading(false);   \n  //     });\n  // }, []); \n  \n  \n// import React, { useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import './style.css';\n\n\n\n\n\n// const Projects = () => {\n//   const [projects, setProjects] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n// useEffect(()=>{\n//   fetchProjects()\n//     .then(data=>{\n//       setProjects(data);\n//       setLoading(false);\n//     })\n//     .catch(error=>{\n\n//       setError(error);\n//       setLoading(false);\n//     });\n\n// },[]);\n  \n  \n\n//   const truncateText = (text, length) => {\n//     if (text.length > length) {\n//       return text.slice(0, length) + '...';\n//     }\n//     return text;\n//   };\n\n//   if (loading) {\n//     return <div>Загрузка...</div>;  // Пока загружаются данные\n//   }\n\n//   if (error) {\n//     return <div>Ошибка: {error.message}</div>;  // Если произошла ошибка\n//   }\n\n//   return (\n//     <section className=\"card-section\">\n//       <div className=\"card-conteiner\">\n//         {projects.length === 0 ? (\n//           <p>Нет проектов для отображения</p>\n//         ) : (\n//           projects.map((project) => (\n//             <Link to={`/projects/${project.id}`} key={project.id} className=\"no-link-style\">\n//               <div className=\"glass-card\">\n//                 <div className=\"card-logo\">\n//                   {/* Вы можете заменить это на свой логотип */}\n//                   <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"size-6\">\n//                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3\" />\n//                   </svg>\n//                 </div>\n//                 <div className=\"card-description\">\n//                   <h5>{project.name}</h5>\n//                 </div>\n//                 <div className=\"card-items\">\n//                   <p>{truncateText(project.description, 100)}</p>\n//                 </div>\n//                 <div className=\"card-link\">\n//                   {project.link && (\n//                     <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\n//                       Перейти на проект\n//                     </a>\n//                   )}\n//                 </div>\n//               </div>\n//             </Link>\n//           ))\n//         )}\n//       </div>\n//     </section>\n//   );\n// };\n\n// export default Projects;\n\nimport React, { useEffect, useState } from 'react';\n\nconst Testa = () => {\n  const [data, setData] = useState([]);  // Состояние для хранения данных\n  const [loading, setLoading] = useState(true);  // Состояние загрузки\n  const [error, setError] = useState(null);  // Состояние для обработки ошибок\n\n  useEffect(() => {\n    // Функция для выполнения запроса к API\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/projects/');\n        \n        if (!response.ok) {\n          throw new Error('Ошибка при получении данных!');\n        }\n\n        const result = await response.json();\n        setData(result);  // Сохраняем данные в состояние\n        setLoading(false);  // Завершаем загрузку\n      } catch (error) {\n        setError(error);  // Обрабатываем ошибку\n        setLoading(false);  // Завершаем загрузку\n      }\n    };\n\n    fetchData();  // Вызываем функцию\n  }, []);  // Пустой массив зависимостей, чтобы запрос выполнялся только один раз\n\n  // Отображаем данные или ошибку\n  if (loading) {\n    return <div>Загрузка...</div>;\n  }\n\n  if (error) {\n    return <div>Ошибка: {error.message}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Список проектов</h1>\n      <ul>\n        {data.length === 0 ? (\n          <p>Нет данных для отображения</p>\n        ) : (\n          data.map((project) => (\n            <li key={project.id}>\n              <h2>{project.name}</h2>\n              <p>{project.description}</p>\n              {project.link && <a href={project.link}>Перейти на проект</a>}\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Testa;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAGE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGF;AACA;AACA;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACvC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC/C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE3CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QAEnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QAEA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpCX,OAAO,CAACU,MAAM,CAAC,CAAC,CAAE;QAClBR,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAE;QAClBD,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;MACtB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC,CAAC,CAAE;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET;EACA,IAAIJ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAgB,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/B;EAEA,IAAIb,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAgB,QAAA,GAAK,wCAAQ,EAACT,KAAK,CAACc,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3C;EAEA,oBACEpB,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBpB,OAAA;MAAAgB,QAAA,EACGb,IAAI,CAACmB,MAAM,KAAK,CAAC,gBAChBtB,OAAA;QAAAgB,QAAA,EAAG;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEjCjB,IAAI,CAACoB,GAAG,CAAEC,OAAO,iBACfxB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,EAAKQ,OAAO,CAACC;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBpB,OAAA;UAAAgB,QAAA,EAAIQ,OAAO,CAACE;QAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC3BI,OAAO,CAACG,IAAI,iBAAI3B,OAAA;UAAG4B,IAAI,EAAEJ,OAAO,CAACG,IAAK;UAAAX,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAHtDI,OAAO,CAACK,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACL;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtDID,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AAwDX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}